// Code generated by MockGen. DO NOT EDIT.
// Source: presenter.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	rentals "github.com/nvasilev98/rentals/pkg/repository/postgres/rentals"
)

// MockRentalRepository is a mock of RentalRepository interface.
type MockRentalRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRentalRepositoryMockRecorder
}

// MockRentalRepositoryMockRecorder is the mock recorder for MockRentalRepository.
type MockRentalRepositoryMockRecorder struct {
	mock *MockRentalRepository
}

// NewMockRentalRepository creates a new mock instance.
func NewMockRentalRepository(ctrl *gomock.Controller) *MockRentalRepository {
	mock := &MockRentalRepository{ctrl: ctrl}
	mock.recorder = &MockRentalRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRentalRepository) EXPECT() *MockRentalRepositoryMockRecorder {
	return m.recorder
}

// RetrieveRentalByID mocks base method.
func (m *MockRentalRepository) RetrieveRentalByID(ctx context.Context, id string) (rentals.Model, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveRentalByID", ctx, id)
	ret0, _ := ret[0].(rentals.Model)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveRentalByID indicates an expected call of RetrieveRentalByID.
func (mr *MockRentalRepositoryMockRecorder) RetrieveRentalByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveRentalByID", reflect.TypeOf((*MockRentalRepository)(nil).RetrieveRentalByID), ctx, id)
}

// RetrieveRentals mocks base method.
func (m *MockRentalRepository) RetrieveRentals(ctx context.Context, query map[string][]string) ([]rentals.Model, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveRentals", ctx, query)
	ret0, _ := ret[0].([]rentals.Model)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveRentals indicates an expected call of RetrieveRentals.
func (mr *MockRentalRepositoryMockRecorder) RetrieveRentals(ctx, query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveRentals", reflect.TypeOf((*MockRentalRepository)(nil).RetrieveRentals), ctx, query)
}
